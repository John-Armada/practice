Learning Git
# first create repository and coppy ssh url
# go to git bash, add "git clone {ssh url}"
# You're ready to go

# When adding a new file, enter "git add app.py(e.g)"
# git commit -m "added app.py file (e.g)" - when you want to add a message
# git diff -will tell us everything the difference between the current version in our directory and the version in git

# press q when there is ": "
# git add . - to add multiple files at one time
# git commit - m

# git push - adding changes to github

# git checkout -b {name} - having a new branch/initial
# git push --set-upstream origin {Brach-A} - after the new, commit this
# git checkout main - go back in default branch

# git status - tell what branch are you on

# git merge - tell github merge other branch in branch we're on

# git pull - to update the changes made by others

# I am Christ John
# How are you?
# Are you in college?

print("I am John 2")

# Whole process steps
# 1 Create a project on github
# 2 clone the project down to your local computer
# 3 add any amount of code and changes that you want using the git add command
# 4 Once you finalize those changes into a coherent version, use the commit command to commit those changes to git
# 5 Lastly, after you've done all the adding and all the committing that you need to do for a particular feature or project then you use the git push command 
# to push those changes back up to github
# Also you need to use branches in between there to be able to create new branches for certain features so that you do not bring different features into each other
# Just merge after you have done creating branches for different features that describes what your project is all about



#Python Crash Course - A Hands On, Project - Based Book
    
#Python programmers use all capital letters when naming variable to assign the value permanent and never be changed.
        #E.G. SURNAME = "ARMADA"
# itâ€™s a good idea to make the name of your list plural, such as letters, digits, or names. 

#append/inset, del/remove